import YandexMobileAdsModule from './YandexMobileAdsModule';
import { type MobileAdsModuleInterface } from './types/MobileAdsModule.interface';
import { isBoolean, isSupportedPlatform } from './util';

class MobileAdsModule implements MobileAdsModuleInterface {
    readonly pluginVersion = '7.13.0';

    getLibraryVersion() {
        try {
            isSupportedPlatform();
            return YandexMobileAdsModule.YandexMobileAds.getLibraryVersion();
        } catch {}
    }

    initialize() {
        try {
            isSupportedPlatform();
            return YandexMobileAdsModule.YandexMobileAds.initializeSdk();
        } catch {}
    }

    showDebugPanel() {
        try {
            isSupportedPlatform();
            return YandexMobileAdsModule.YandexMobileAds.showDebugPanel();
        } catch {}
    }

    enableLogging(enableLogging: any) {
        try {
            isSupportedPlatform();
            isBoolean(enableLogging);
            YandexMobileAdsModule.YandexMobileAds.enableLogging(enableLogging);
        } catch {}
    }

    enableDebugErrorIndicator(enableIndicator: any) {
        try {
            isSupportedPlatform();
            isBoolean(enableIndicator);
            YandexMobileAdsModule.YandexMobileAds.enableDebugErrorIndicator(enableIndicator);
        } catch {}
    }

    setLocationConsent(locationConsent: any) {
        try {
            isSupportedPlatform();
            isBoolean(locationConsent);
            YandexMobileAdsModule.YandexMobileAds.setLocationConsent(locationConsent);
        } catch {}
    }

    setAgeRestrictedUser(ageRestrictedUser: any) {
        try {
            isSupportedPlatform();
            isBoolean(ageRestrictedUser);
            YandexMobileAdsModule.YandexMobileAds.setAgeRestrictedUser(ageRestrictedUser);
        } catch {}
    }

    setUserConsent(userConsent: any) {
        try {
            isSupportedPlatform();
            isBoolean(userConsent);
            YandexMobileAdsModule.YandexMobileAds.setUserConsent(userConsent);
        } catch {}
    }
}

const MobileAdsInstance = new MobileAdsModule();

export const MobileAds = MobileAdsInstance;

export default MobileAds;
