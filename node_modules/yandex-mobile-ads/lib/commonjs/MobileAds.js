"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.MobileAds = void 0;
var _YandexMobileAdsModule = _interopRequireDefault(require("./YandexMobileAdsModule"));
var _util = require("./util");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
class MobileAdsModule {
  pluginVersion = '7.13.0';
  getLibraryVersion() {
    try {
      (0, _util.isSupportedPlatform)();
      return _YandexMobileAdsModule.default.YandexMobileAds.getLibraryVersion();
    } catch {}
  }
  initialize() {
    try {
      (0, _util.isSupportedPlatform)();
      return _YandexMobileAdsModule.default.YandexMobileAds.initializeSdk();
    } catch {}
  }
  showDebugPanel() {
    try {
      (0, _util.isSupportedPlatform)();
      return _YandexMobileAdsModule.default.YandexMobileAds.showDebugPanel();
    } catch {}
  }
  enableLogging(enableLogging) {
    try {
      (0, _util.isSupportedPlatform)();
      (0, _util.isBoolean)(enableLogging);
      _YandexMobileAdsModule.default.YandexMobileAds.enableLogging(enableLogging);
    } catch {}
  }
  enableDebugErrorIndicator(enableIndicator) {
    try {
      (0, _util.isSupportedPlatform)();
      (0, _util.isBoolean)(enableIndicator);
      _YandexMobileAdsModule.default.YandexMobileAds.enableDebugErrorIndicator(enableIndicator);
    } catch {}
  }
  setLocationConsent(locationConsent) {
    try {
      (0, _util.isSupportedPlatform)();
      (0, _util.isBoolean)(locationConsent);
      _YandexMobileAdsModule.default.YandexMobileAds.setLocationConsent(locationConsent);
    } catch {}
  }
  setAgeRestrictedUser(ageRestrictedUser) {
    try {
      (0, _util.isSupportedPlatform)();
      (0, _util.isBoolean)(ageRestrictedUser);
      _YandexMobileAdsModule.default.YandexMobileAds.setAgeRestrictedUser(ageRestrictedUser);
    } catch {}
  }
  setUserConsent(userConsent) {
    try {
      (0, _util.isSupportedPlatform)();
      (0, _util.isBoolean)(userConsent);
      _YandexMobileAdsModule.default.YandexMobileAds.setUserConsent(userConsent);
    } catch {}
  }
}
const MobileAdsInstance = new MobileAdsModule();
const MobileAds = exports.MobileAds = MobileAdsInstance;
var _default = exports.default = MobileAds;
//# sourceMappingURL=MobileAds.js.map